version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7-jammy
    container_name: multimodel-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-secure_password_change_me}
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME:-multimodel_chat}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - multimodel-network

  # Redis (Optional - for caching/sessions)
  redis:
    image: redis:7-alpine
    container_name: multimodel-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - multimodel-network

  # Main Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: multimodel-app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3101
      MONGODB_URI: mongodb://${MONGO_ROOT_USER:-admin}:${MONGO_ROOT_PASSWORD:-secure_password_change_me}@mongodb:27017/${MONGO_DB_NAME:-multimodel_chat}?authSource=admin
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      CLIENT_URL: ${CLIENT_URL:-http://localhost}
      REDIS_URL: redis://redis:6379
      # Rate limiting
      RATE_LIMIT_WINDOW_MS: ${RATE_LIMIT_WINDOW_MS:-900000}
      RATE_LIMIT_MAX_REQUESTS: ${RATE_LIMIT_MAX_REQUESTS:-100}
    ports:
      - "127.0.0.1:3101:3101"  # Only bind to localhost for Nginx proxy
    depends_on:
      - mongodb
      - redis
    volumes:
      - app_uploads:/app/uploads
    networks:
      - multimodel-network


volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  app_uploads:
    driver: local

networks:
  multimodel-network:
    driver: bridge